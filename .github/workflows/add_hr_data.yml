name: Add New User HR Data


on:

  workflow_dispatch:

    inputs:

      newHrData:

        description: 'JSON string of the new user HR data'

        required: true


jobs:

  add-hr-data:

    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout repository
      
        uses: actions/checkout@v4

      - name: Set up Python

        uses: actions/setup-python@v4

        with:

          python-version: '3.10'


      - name: Run script to add HR data to secret

        env:

          EXISTING_HR_JSON: ${{ secrets.HR_DATA }}

          GH_TOKEN: ${{ secrets.PAT_FOR_SECRETS }}

          NEW_HR_JSON: ${{ github.event.inputs.newHrData }}

        shell: bash

        run: |

          python << 'EOF'

          import os, json, subprocess, sys

          try:

              existing_hr_str = os.environ.get('EXISTING_HR_JSON', '{}')
              
              print(existing_hr_str)

              existing_hr_data = json.loads(existing_hr_str)

              new_hr_str = os.environ['NEW_HR_JSON']
              
              print(new_hr_str)

              new_hr_data = json.loads(new_hr_str)

              

              updated_hr_data = {**existing_hr_data, **new_hr_data}

              updated_hr_json_str = json.dumps(updated_hr_data)

              

              print('Updating HR_DATA secret...')

              subprocess.run(

                  ['gh', 'secret', 'set', 'HR_DATA', '--body', updated_hr_json_str],

                  check=True, text=True, capture_output=True

              )

              print('âœ… Successfully updated HR_DATA secret.')

          except subprocess.CalledProcessError as e:
          
              print(f'An error occurred while running the "gh secret set" command.', file=sys.stderr)
              
              print(f'Return Code: {e.returncode}', file=sys.stderr)
              
              print(f'STDOUT: {e.stdout}', file=sys.stderr)
              
              print(f'STDERR (This is the important error from GitHub): {e.stderr}', file=sys.stderr)
              
              sys.exit(1)
              
          except Exception as e:
          
              print(f'An unexpected Python error occurred: {e}', file=sys.stderr)
              
              sys.exit(1)
              
EOF 
